plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
	id 'io.franzbecker.gradle-lombok' version '1.14'
	id 'java'
	id 'idea'
	id 'war'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.enliple.book'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	compile group: 'joda-time', name: 'joda-time', version: '2.8.1'
	compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.3.0'
	// swagger2
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.6.1'
	// mysql
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.11'
	// redis(cache)
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '2.1.8.RELEASE'
	
	// jstl(jsp)
	compile('org.apache.tomcat.embed:tomcat-embed-jasper')
	compile('javax.servlet:jstl:1.2')
	// queryDsl(JPA)
	compile('com.querydsl:querydsl-core')
	compile("com.querydsl:querydsl-jpa")
	compile("com.querydsl:querydsl-apt")
	// actuator 추가(모니터링용도)
	compile("org.springframework.boot:spring-boot-starter-actuator")
}


def querydslSrcDir = 'src/main/generated'

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslSrcDir
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslSrcDir]
		}
	}
}

//test {
//	useJUnitPlatform()
//}
